import{a as f,z as S,i as y,b as h,B as E,F as _,t as w,k,d as I}from"./vendor-e7ea9428.js";import{c as D,v as R,z as b}from"./index-0ea9968e.js";import{e as d,s as x,a as C}from"./index-a69b8eca.js";let m;const F=new Uint8Array(16);function V(){if(!m&&(m=typeof crypto<"u"&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!m))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return m(F)}const e=[];for(let t=0;t<256;++t)e.push((t+256).toString(16).slice(1));function j(t,n=0){return(e[t[n+0]]+e[t[n+1]]+e[t[n+2]]+e[t[n+3]]+"-"+e[t[n+4]]+e[t[n+5]]+"-"+e[t[n+6]]+e[t[n+7]]+"-"+e[t[n+8]]+e[t[n+9]]+"-"+e[t[n+10]]+e[t[n+11]]+e[t[n+12]]+e[t[n+13]]+e[t[n+14]]+e[t[n+15]]).toLowerCase()}const z=typeof crypto<"u"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto),v={randomUUID:z};function A(t,n,a){if(v.randomUUID&&!n&&!t)return v.randomUUID();t=t||{};const s=t.random||(t.rng||V)();if(s[6]=s[6]&15|64,s[8]=s[8]&63|128,n){a=a||0;for(let r=0;r<16;++r)n[a+r]=s[r];return n}return j(s)}const L=w('<div class="mx-auto flex flex-col items-center gap-4 py-10 sm:w-2/3"><form class="contents"><div class="flex w-full flex-col gap-4"><input name="url" type="url" class="input input-bordered" placeholder="http://127.0.0.1:9000" list="defaultEndpoints"><datalist id="defaultEndpoints"><option value="http://127.0.0.1:9000"></option></datalist><input name="secret" type="password" autocomplete="new-password" class="input input-bordered" placeholder="secret"><button type="submit" class="btn btn-primary join-item uppercase">Add</button></div></form><div class="flex w-full flex-col gap-4">'),B=w('<div class="badge badge-info flex w-full cursor-pointer items-center gap-4 py-4"><button class="btn btn-circle btn-ghost btn-xs text-white">'),H=b.object({url:b.string().url().nonempty(),secret:b.string()}),X=()=>{const t=f(),n=o=>{C(o),t("/overview")},a=(o,i)=>k.get(o,{headers:i?{Authorization:`Bearer ${i}`}:{}}).then(({ok:c})=>c).catch(()=>!1),s=async o=>{const i=d().find(c=>c.id===o);i&&await a(i.url,i.secret)&&n(o)},{form:r}=D({extend:R({schema:H}),async onSubmit({url:o,secret:i}){const c=d().find(p=>p.url===o&&p.secret===i);if(c){n(c.id);return}if(!await a(o,i))return;const l=A();x([{id:l,url:o,secret:i},...d()]),n(l)}}),$=o=>x(d().filter(i=>i.id!==o));return(()=>{const o=L(),i=o.firstChild,c=i.nextSibling;return S(r,i,()=>r),y(c,h(_,{get each(){return d()},children:({id:l,url:p})=>(()=>{const u=B(),g=u.firstChild;return u.$$click=()=>s(l),y(u,p,g),g.$$click=U=>{U.stopPropagation(),$(l)},y(g,h(E,{})),u})()})),o})()};I(["click"]);export{X as default};
