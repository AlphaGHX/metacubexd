import{u as C,b as D,J as R,i as m,e as w,K as V,F as j,l as f,k as F,d as L}from"./vendor-48c5660e.js";import{c as z,v as A,z as b}from"./index-bb44c23f.js";import{e as c,s as h,a as B}from"./index-7ff5154f.js";let g;const H=new Uint8Array(16);function J(){if(!g&&(g=typeof crypto<"u"&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!g))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return g(H)}const i=[];for(let t=0;t<256;++t)i.push((t+256).toString(16).slice(1));function K(t,e=0){return(i[t[e+0]]+i[t[e+1]]+i[t[e+2]]+i[t[e+3]]+"-"+i[t[e+4]]+i[t[e+5]]+"-"+i[t[e+6]]+i[t[e+7]]+"-"+i[t[e+8]]+i[t[e+9]]+"-"+i[t[e+10]]+i[t[e+11]]+i[t[e+12]]+i[t[e+13]]+i[t[e+14]]+i[t[e+15]]).toLowerCase()}const N=typeof crypto<"u"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto),S={randomUUID:N};function P(t,e,l){if(S.randomUUID&&!e&&!t)return S.randomUUID();t=t||{};const s=t.random||(t.rng||J)();if(s[6]=s[6]&15|64,s[8]=s[8]&63|128,e){l=l||0;for(let r=0;r<16;++r)e[l+r]=s[r];return e}return K(s)}const T=f('<div class="mx-auto flex flex-col items-center gap-4 py-10 sm:w-2/3"><form class="contents"><div class="flex w-full flex-col gap-4"><input name="url" type="url" class="input input-bordered" placeholder="http://127.0.0.1:9090" list="defaultEndpoints"><datalist id="defaultEndpoints"><option value="http://127.0.0.1:9090"></option></datalist><input name="secret" type="password" autocomplete="new-password" class="input input-bordered" placeholder="secret"><button type="submit" class="btn btn-primary join-item uppercase"></button></div></form><div class="flex w-full flex-col gap-4">'),X=f('<div class="badge badge-info flex w-full cursor-pointer items-center gap-4 py-4"><button class="btn btn-circle btn-ghost btn-xs text-white">'),q=b.object({url:b.string().url().nonempty(),secret:b.string()}),Q=()=>{const[t]=C(),e=D(),l=o=>{B(o),e("/overview")},s=(o,n)=>F.get(o,{headers:n?{Authorization:`Bearer ${n}`}:{}}).then(({ok:a})=>a).catch(()=>!1),r=async o=>{const n=c().find(a=>a.id===o);n&&await s(n.url,n.secret)&&l(o)},{form:v}=z({extend:A({schema:q}),async onSubmit({url:o,secret:n}){const a=c().findIndex(d=>d.url===o);if(a>-1){const{id:d,secret:y}=c()[a];n!==y&&!await s(o,n)&&(c()[a].secret=n,h(c())),l(d);return}if(!await s(o,n))return;const p=P();h([{id:p,url:o,secret:n},...c()]),l(p)}}),_=o=>h(c().filter(n=>n.id!==o));return(()=>{const o=T(),n=o.firstChild,a=n.firstChild,p=a.firstChild,d=p.nextSibling,y=d.nextSibling,U=y.nextSibling,E=n.nextSibling;return R(v,n,()=>v),m(U,()=>t("add")),m(E,w(j,{get each(){return c()},children:({id:$,url:I})=>(()=>{const u=X(),x=u.firstChild;return u.$$click=()=>r($),m(u,I,x),x.$$click=k=>{k.stopPropagation(),_($)},m(x,w(V,{})),u})()})),o})()};L(["click"]);export{Q as default};
