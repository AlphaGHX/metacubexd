import{a as S,C as U,i as y,b,D as E,F as I,h as w,k as _,d as k}from"./vendor-c5e716b7.js";import{c as D,v as C,z as h}from"./index-71d1c293.js";import{e as c,s as x,a as R}from"./index-d842f6ea.js";let m;const V=new Uint8Array(16);function j(){if(!m&&(m=typeof crypto<"u"&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!m))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return m(V)}const o=[];for(let t=0;t<256;++t)o.push((t+256).toString(16).slice(1));function A(t,n=0){return(o[t[n+0]]+o[t[n+1]]+o[t[n+2]]+o[t[n+3]]+"-"+o[t[n+4]]+o[t[n+5]]+"-"+o[t[n+6]]+o[t[n+7]]+"-"+o[t[n+8]]+o[t[n+9]]+"-"+o[t[n+10]]+o[t[n+11]]+o[t[n+12]]+o[t[n+13]]+o[t[n+14]]+o[t[n+15]]).toLowerCase()}const F=typeof crypto<"u"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto),v={randomUUID:F};function L(t,n,r){if(v.randomUUID&&!n&&!t)return v.randomUUID();t=t||{};const a=t.random||(t.rng||j)();if(a[6]=a[6]&15|64,a[8]=a[8]&63|128,n){r=r||0;for(let l=0;l<16;++l)n[r+l]=a[l];return n}return A(a)}const z=w('<div class="mx-auto flex flex-col items-center gap-4 py-10 sm:w-2/3"><form class="contents"><div class="flex w-full flex-col gap-4"><input name="url" type="url" class="input input-bordered" placeholder="http://127.0.0.1:9090" list="defaultEndpoints"><datalist id="defaultEndpoints"><option value="http://127.0.0.1:9090"></option></datalist><input name="secret" type="password" autocomplete="new-password" class="input input-bordered" placeholder="secret"><button type="submit" class="btn btn-primary join-item uppercase">Add</button></div></form><div class="flex w-full flex-col gap-4">'),B=w('<div class="badge badge-info flex w-full cursor-pointer items-center gap-4 py-4"><button class="btn btn-circle btn-ghost btn-xs text-white">'),H=h.object({url:h.string().url().nonempty(),secret:h.string()}),X=()=>{const t=S(),n=i=>{R(i),t("/overview")},r=(i,e)=>_.get(i,{headers:e?{Authorization:`Bearer ${e}`}:{}}).then(({ok:s})=>s).catch(()=>!1),a=async i=>{const e=c().find(s=>s.id===i);e&&await r(e.url,e.secret)&&n(i)},{form:l}=D({extend:C({schema:H}),async onSubmit({url:i,secret:e}){const s=c().findIndex(u=>u.url===i);if(s>-1){const{id:u,secret:d}=c()[s];e!==d&&!await r(i,e)&&(c()[s].secret=e,x(c())),n(u);return}if(!await r(i,e))return;const p=L();x([{id:p,url:i,secret:e},...c()]),n(p)}}),$=i=>x(c().filter(e=>e.id!==i));return(()=>{const i=z(),e=i.firstChild,s=e.nextSibling;return U(l,e,()=>l),y(s,b(I,{get each(){return c()},children:({id:p,url:u})=>(()=>{const d=B(),g=d.firstChild;return d.$$click=()=>a(p),y(d,u,g),g.$$click=f=>{f.stopPropagation(),$(p)},y(g,b(E,{})),d})()})),i})()};k(["click"]);export{X as default};
