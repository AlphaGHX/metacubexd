import{b as S,J as U,i as y,e as b,K as E,F as I,l as w,k as _,d as k}from"./vendor-48c5660e.js";import{c as D,v as R,z as h}from"./index-bb44c23f.js";import{e as a,s as x,a as C}from"./index-a71ad6cc.js";let m;const V=new Uint8Array(16);function j(){if(!m&&(m=typeof crypto<"u"&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!m))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return m(V)}const o=[];for(let t=0;t<256;++t)o.push((t+256).toString(16).slice(1));function A(t,e=0){return(o[t[e+0]]+o[t[e+1]]+o[t[e+2]]+o[t[e+3]]+"-"+o[t[e+4]]+o[t[e+5]]+"-"+o[t[e+6]]+o[t[e+7]]+"-"+o[t[e+8]]+o[t[e+9]]+"-"+o[t[e+10]]+o[t[e+11]]+o[t[e+12]]+o[t[e+13]]+o[t[e+14]]+o[t[e+15]]).toLowerCase()}const F=typeof crypto<"u"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto),v={randomUUID:F};function L(t,e,r){if(v.randomUUID&&!e&&!t)return v.randomUUID();t=t||{};const c=t.random||(t.rng||j)();if(c[6]=c[6]&15|64,c[8]=c[8]&63|128,e){r=r||0;for(let l=0;l<16;++l)e[r+l]=c[l];return e}return A(c)}const z=w('<div class="mx-auto flex flex-col items-center gap-4 py-10 sm:w-2/3"><form class="contents"><div class="flex w-full flex-col gap-4"><input name="url" type="url" class="input input-bordered" placeholder="http://127.0.0.1:9090" list="defaultEndpoints"><datalist id="defaultEndpoints"><option value="http://127.0.0.1:9090"></option></datalist><input name="secret" type="password" autocomplete="new-password" class="input input-bordered" placeholder="secret"><button type="submit" class="btn btn-primary join-item uppercase">Add</button></div></form><div class="flex w-full flex-col gap-4">'),B=w('<div class="badge badge-info flex w-full cursor-pointer items-center gap-4 py-4"><button class="btn btn-circle btn-ghost btn-xs text-white">'),H=h.object({url:h.string().url().nonempty(),secret:h.string()}),P=()=>{const t=S(),e=i=>{C(i),t("/overview")},r=(i,n)=>_.get(i,{headers:n?{Authorization:`Bearer ${n}`}:{}}).then(({ok:s})=>s).catch(()=>!1),c=async i=>{const n=a().find(s=>s.id===i);n&&await r(n.url,n.secret)&&e(i)},{form:l}=D({extend:R({schema:H}),async onSubmit({url:i,secret:n}){const s=a().findIndex(u=>u.url===i);if(s>-1){const{id:u,secret:d}=a()[s];n!==d&&!await r(i,n)&&(a()[s].secret=n,x(a())),e(u);return}if(!await r(i,n))return;const p=L();x([{id:p,url:i,secret:n},...a()]),e(p)}}),$=i=>x(a().filter(n=>n.id!==i));return(()=>{const i=z(),n=i.firstChild,s=n.nextSibling;return U(l,n,()=>l),y(s,b(I,{get each(){return a()},children:({id:p,url:u})=>(()=>{const d=B(),g=d.firstChild;return d.$$click=()=>c(p),y(d,u,g),g.$$click=f=>{f.stopPropagation(),$(p)},y(g,b(E,{})),d})()})),i})()};k(["click"]);export{P as default};
